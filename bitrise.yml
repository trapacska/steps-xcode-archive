format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 2.4.10

  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  ci:
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - test_cloudkit
    - test_objc
    - test_xcode_8
    - test_multi_target
    - test_workspace
    - test_tvos

  test_cloudkit:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-multi-target.git
    - BRANCH: cloudkit
    - BITRISE_PROJECT_PATH: code-sign-test.xcodeproj
    - BITRISE_SCHEME: code-sign-test-Prod
    - OUTPUT_TOOL: xcodebuild
    - ICLOUD_CONTAINER_ENVIRONMENT: Production
    after_run:
    - _common

  test_objc:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/sample-apps-ios-simple-objc.git
    - COMMIT: "65cd120bf4459c2881cfe2b731395b4efc53855d"
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - OUTPUT_TOOL: xcodebuild
    - FORCE_CODE_SIGN_IDENTITY: "iPhone Developer: Bitrise Bot"
    - FORCE_TEAM_ID: 72SA8V3WYL
    after_run:
    - _common

  test_xcode_8:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ios-xcode-8.0.git
    - COMMIT: "52ca16a9cead25be8c95c54e7fd53ce8fd945330"
    - BITRISE_PROJECT_PATH: ios-xcode-8.0/ios-xcode-8.0.xcodeproj
    - BITRISE_SCHEME: ios-xcode-8.0
    - FORCE_TEAM_ID: 72SA8V3WYL
    - FORCE_CODE_SIGN_IDENTITY: "iPhone Developer: Bitrise Bot"
    - OUTPUT_TOOL: xcpretty
    after_run:
    - _common

  test_multi_target:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-multi-target.git
    - COMMIT: "ab36ed563bbc3125118e9f27df91474822dc0d46"
    - BITRISE_PROJECT_PATH: code-sign-test.xcodeproj
    - BITRISE_SCHEME: code-sign-test
    - FORCE_CODE_SIGN_IDENTITY: "iPhone Developer: Bitrise Bot"
    - FORCE_TEAM_ID: 72SA8V3WYL
    after_run:
    - _common

  test_workspace:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-workspace-swift.git
    - COMMIT: "1360413258cc7f6a8676c17f060ff39899fc28b1"
    - BITRISE_PROJECT_PATH: sample-apps-ios-workspace-swift.xcworkspace
    - BITRISE_SCHEME: sample-apps-ios-workspace-swift
    - FORCE_CODE_SIGN_IDENTITY: "iPhone Developer: Bitrise Bot"
    - PROV_PROFILE_SPECIFIER: "BitriseBot-Wildcard"
    - FORCE_TEAM_ID: 72SA8V3WYL
    after_run:
    - _common

  test_tvos:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-tvos-swift.git
    - BRANCH: "master"
    - BITRISE_PROJECT_PATH: NPO Live.xcworkspace
    - BITRISE_SCHEME: "NPO Live"
    - FORCE_CODE_SIGN_IDENTITY: ""
    - FORCE_TEAM_ID: ""
    - PROV_PROFILE_SPECIFIER: ""
    - OUTPUT_TOOL: xcpretty
    after_run:
    - _common

  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "$ORIG_BITRISE_SOURCE_DIR/_tmp"
            mkdir -p "$ORIG_BITRISE_SOURCE_DIR/_tmp"
    - change-workdir:
        title: Switch working dir to _tmp dir
        run_if: true
        inputs:
        - path: "$ORIG_BITRISE_SOURCE_DIR/_tmp"
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash

            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi

            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"

    - certificate-and-profile-installer:
    - path::./:
        inputs:
        - output_tool: $OUTPUT_TOOL
        - force_code_sign_identity: $FORCE_CODE_SIGN_IDENTITY
        - force_team_id: $FORCE_TEAM_ID
        - verbose_log: "yes"
        - force_provisioning_profile_specifier: $PROV_PROFILE_SPECIFIER
        - icloud_container_environment: $ICLOUD_CONTAINER_ENVIRONMENT
    - script:
        title: Output (generated by the Step) tests
        is_always_run: true
        inputs:
        - content: |-
            echo "-> BITRISE_IPA_PATH:           $BITRISE_IPA_PATH"
            echo "-> BITRISE_DSYM_PATH:          $BITRISE_DSYM_PATH"
            echo "-> BITRISE_XCARCHIVE_ZIP_PATH: $BITRISE_XCARCHIVE_ZIP_PATH"

            echo "-> BITRISE_APP_DIR_PATH:               $BITRISE_APP_DIR_PATH"
            echo "-> BITRISE_DSYM_DIR_PATH:              $BITRISE_DSYM_DIR_PATH"
            echo "-> BITRISE_XCARCHIVE_PATH:             $BITRISE_XCARCHIVE_PATH"
            echo "-> BITRISE_IDEDISTRIBUTION_LOGS_PATH:  $BITRISE_IDEDISTRIBUTION_LOGS_PATH"
            echo "-> BITRISE_XCODE_RAW_RESULT_TEXT_PATH: $BITRISE_XCODE_RAW_RESULT_TEXT_PATH"

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version $STEP_VERSION

  # ----------------------------------------------------------------
  # --- workflow to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: xcode-archive
      - STEP_GIT_VERION_TAG_TO_SHARE: $STEP_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/trapacska/steps-xcode-archive.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
